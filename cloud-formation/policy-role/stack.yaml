AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ProjectName:
    Type: String
    Description: Name of the project

  EnvironmentName:
    Type: String
    Description: An environment name that will be prefixed to resource names

  StackName:
    Type: String
    Description: Name of the stack

  K8sClusterName:
    Type: String
    Description: Please enter the name for the K8sClusterName

  S3BucketName:
    Type: String
    Description: Please enter the name for the S3BucketName

Resources:
  AwsEbsCsiDriverPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AwsEbsCsiDriverPolicy
      Description: Policy for the AWS EBS CSI Driver
      Roles:
        - !Ref ControlPlaneInstanceIAMRole
        - !Ref WorkerInstanceIAMRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ec2:CreateSnapshot
              - ec2:AttachVolume
              - ec2:DetachVolume
              - ec2:ModifyVolume
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeInstances
              - ec2:DescribeSnapshots
              - ec2:DescribeTags
              - ec2:DescribeVolumes
              - ec2:DescribeVolumesModifications
            Resource: "*"
          - Effect: Allow
            Action:
              - ec2:CreateTags
            Resource:
              - "arn:aws:ec2:*:*:volume/*"
              - "arn:aws:ec2:*:*:snapshot/*"
            Condition:
              StringEquals:
                "ec2:CreateAction":
                  - "CreateVolume"
                  - "CreateSnapshot"
          - Effect: Allow
            Action:
              - ec2:DeleteTags
            Resource:
              - "arn:aws:ec2:*:*:volume/*"
              - "arn:aws:ec2:*:*:snapshot/*"
          - Effect: Allow
            Action:
              - ec2:CreateVolume
            Resource: "*"
            Condition:
              StringLike:
                "aws:RequestTag/ebs.csi.aws.com/cluster": "true"
          - Effect: Allow
            Action:
              - ec2:CreateVolume
            Resource: "*"
            Condition:
              StringLike:
                "aws:RequestTag/CSIVolumeName": "*"
          - Effect: Allow
            Action:
              - ec2:DeleteVolume
            Resource: "*"
            Condition:
              StringLike:
                "ec2:ResourceTag/ebs.csi.aws.com/cluster": "true"
          - Effect: Allow
            Action:
              - ec2:DeleteVolume
            Resource: "*"
            Condition:
              StringLike:
                "ec2:ResourceTag/CSIVolumeName": "*"
          - Effect: Allow
            Action:
              - ec2:DeleteVolume
            Resource: "*"
            Condition:
              StringLike:
                "ec2:ResourceTag/kubernetes.io/created-for/pvc/name": "*"
          - Effect: Allow
            Action:
              - ec2:DeleteSnapshot
            Resource: "*"
            Condition:
              StringLike:
                "ec2:ResourceTag/CSIVolumeSnapshotName": "*"
          - Effect: Allow
            Action:
              - ec2:DeleteSnapshot
            Resource: "*"
            Condition:
              StringLike:
                "ec2:ResourceTag/ebs.csi.aws.com/cluster": "true"

  S3ReadOnlyAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: S3ReadOnlyAccessPolicy
      Description: Policy for the S3ReadOnlyAccess
      Roles: 
        - !Ref BastionHostInstanceIAMRole
        - !Ref ControlPlaneInstanceIAMRole
        - !Ref WorkerInstanceIAMRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:Get*
              - s3:List*
              - s3:Describe*
            Resource:
              - Fn::Sub: arn:aws:s3:::${S3BucketName}
              - Fn::Sub: arn:aws:s3:::${S3BucketName}/*

  S3WriteOnlyAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: S3WriteOnlyAccessPolicy
      Roles: 
        - !Ref ControlPlaneInstanceIAMRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
            Resource:
              - Fn::Sub: arn:aws:s3:::${S3BucketName}
              - Fn::Sub: arn:aws:s3:::${S3BucketName}/*

  ControlPlaneAwsCloudProviderPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ControlPlaneAwsCloudProviderPolicy
      Roles:
        - !Ref ControlPlaneInstanceIAMRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribeLaunchConfigurations
              - autoscaling:DescribeTags
              - ec2:DescribeInstances
              - ec2:DescribeRegions
              - ec2:DescribeRouteTables
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeVolumes
              - ec2:DescribeAvailabilityZones
              - ec2:CreateSecurityGroup
              - ec2:CreateTags
              - ec2:CreateVolume
              - ec2:ModifyInstanceAttribute
              - ec2:ModifyVolume
              - ec2:AttachVolume
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:CreateRoute
              - ec2:DeleteRoute
              - ec2:DeleteSecurityGroup
              - ec2:DeleteVolume
              - ec2:DetachVolume
              - ec2:RevokeSecurityGroupIngress
              - ec2:DescribeVpcs
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:AttachLoadBalancerToSubnets
              - elasticloadbalancing:ApplySecurityGroupsToLoadBalancer
              - elasticloadbalancing:CreateLoadBalancer
              - elasticloadbalancing:CreateLoadBalancerPolicy
              - elasticloadbalancing:CreateLoadBalancerListeners
              - elasticloadbalancing:ConfigureHealthCheck
              - elasticloadbalancing:DeleteLoadBalancer
              - elasticloadbalancing:DeleteLoadBalancerListeners
              - elasticloadbalancing:DescribeLoadBalancers
              - elasticloadbalancing:DescribeLoadBalancerAttributes
              - elasticloadbalancing:DetachLoadBalancerFromSubnets
              - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
              - elasticloadbalancing:ModifyLoadBalancerAttributes
              - elasticloadbalancing:RegisterInstancesWithLoadBalancer
              - elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:CreateListener
              - elasticloadbalancing:CreateTargetGroup
              - elasticloadbalancing:DeleteListener
              - elasticloadbalancing:DeleteTargetGroup
              - elasticloadbalancing:DescribeListeners
              - elasticloadbalancing:DescribeLoadBalancerPolicies
              - elasticloadbalancing:DescribeTargetGroups
              - elasticloadbalancing:DescribeTargetHealth
              - elasticloadbalancing:ModifyListener
              - elasticloadbalancing:ModifyTargetGroup
              - elasticloadbalancing:RegisterTargets
              - elasticloadbalancing:DeregisterTargets
              - elasticloadbalancing:SetLoadBalancerPoliciesOfListener
              - iam:CreateServiceLinkedRole
              - kms:DescribeKey
            Resource:
              - "*"

  EcrPrivateRepositoryPullOnlyPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: EcrPrivateRepositoryPullOnlyPolicy
      Roles:
        - !Ref ControlPlaneInstanceIAMRole
        - !Ref WorkerInstanceIAMRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:GetRepositoryPolicy
              - ecr:DescribeRepositories
              - ecr:ListImages
              - ecr:BatchGetImage
            Resource: "*"

  AwsLoadBalancerControllerPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AwsLoadBalancerControllerPolicy
      Roles:
        - !Ref ControlPlaneInstanceIAMRole
        - !Ref WorkerInstanceIAMRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - iam:CreateServiceLinkedRole
          Resource: "*"
          Condition:
            StringEquals:
              iam:AWSServiceName: elasticloadbalancing.amazonaws.com
        - Effect: Allow
          Action:
          - ec2:DescribeAccountAttributes
          - ec2:DescribeAddresses
          - ec2:DescribeAvailabilityZones
          - ec2:DescribeInternetGateways
          - ec2:DescribeVpcs
          - ec2:DescribeVpcPeeringConnections
          - ec2:DescribeSubnets
          - ec2:DescribeSecurityGroups
          - ec2:DescribeInstances
          - ec2:DescribeNetworkInterfaces
          - ec2:DescribeTags
          - ec2:GetCoipPoolUsage
          - ec2:DescribeCoipPools
          - elasticloadbalancing:DescribeLoadBalancers
          - elasticloadbalancing:DescribeLoadBalancerAttributes
          - elasticloadbalancing:DescribeListeners
          - elasticloadbalancing:DescribeListenerCertificates
          - elasticloadbalancing:DescribeSSLPolicies
          - elasticloadbalancing:DescribeRules
          - elasticloadbalancing:DescribeTargetGroups
          - elasticloadbalancing:DescribeTargetGroupAttributes
          - elasticloadbalancing:DescribeTargetHealth
          - elasticloadbalancing:DescribeTags
          Resource: "*"
        - Effect: Allow
          Action:
          - cognito-idp:DescribeUserPoolClient
          - acm:ListCertificates
          - acm:DescribeCertificate
          - iam:ListServerCertificates
          - iam:GetServerCertificate
          - waf-regional:GetWebACL
          - waf-regional:GetWebACLForResource
          - waf-regional:AssociateWebACL
          - waf-regional:DisassociateWebACL
          - wafv2:GetWebACL
          - wafv2:GetWebACLForResource
          - wafv2:AssociateWebACL
          - wafv2:DisassociateWebACL
          - shield:GetSubscriptionState
          - shield:DescribeProtection
          - shield:CreateProtection
          - shield:DeleteProtection
          Resource: "*"
        - Effect: Allow
          Action:
          - ec2:AuthorizeSecurityGroupIngress
          - ec2:RevokeSecurityGroupIngress
          Resource: "*"
        - Effect: Allow
          Action:
          - ec2:CreateSecurityGroup
          Resource: "*"
        - Effect: Allow
          Action:
          - ec2:CreateTags
          Resource: arn:aws:ec2:*:*:security-group/*
          Condition:
            StringEquals:
              ec2:CreateAction: CreateSecurityGroup
            'Null':
              aws:RequestTag/elbv2.k8s.aws/cluster: 'false'
        - Effect: Allow
          Action:
          - ec2:CreateTags
          - ec2:DeleteTags
          Resource: arn:aws:ec2:*:*:security-group/*
          Condition:
            'Null':
              aws:RequestTag/elbv2.k8s.aws/cluster: 'true'
              aws:ResourceTag/elbv2.k8s.aws/cluster: 'false'
        - Effect: Allow
          Action:
          - ec2:AuthorizeSecurityGroupIngress
          - ec2:RevokeSecurityGroupIngress
          - ec2:DeleteSecurityGroup
          Resource: "*"
          Condition:
            'Null':
              aws:ResourceTag/elbv2.k8s.aws/cluster: 'false'
        - Effect: Allow
          Action:
          - elasticloadbalancing:CreateLoadBalancer
          - elasticloadbalancing:CreateTargetGroup
          Resource: "*"
          Condition:
            'Null':
              aws:RequestTag/elbv2.k8s.aws/cluster: 'false'
        - Effect: Allow
          Action:
          - elasticloadbalancing:CreateListener
          - elasticloadbalancing:DeleteListener
          - elasticloadbalancing:CreateRule
          - elasticloadbalancing:DeleteRule
          Resource: "*"
        - Effect: Allow
          Action:
          - elasticloadbalancing:AddTags
          - elasticloadbalancing:RemoveTags
          Resource:
          - arn:aws:elasticloadbalancing:*:*:targetgroup/*/*
          - arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*
          - arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*
          Condition:
            'Null':
              aws:RequestTag/elbv2.k8s.aws/cluster: 'true'
              aws:ResourceTag/elbv2.k8s.aws/cluster: 'false'
        - Effect: Allow
          Action:
          - elasticloadbalancing:AddTags
          - elasticloadbalancing:RemoveTags
          Resource:
          - arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*
          - arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*
          - arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*
          - arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*
        - Effect: Allow
          Action:
          - elasticloadbalancing:ModifyLoadBalancerAttributes
          - elasticloadbalancing:SetIpAddressType
          - elasticloadbalancing:SetSecurityGroups
          - elasticloadbalancing:SetSubnets
          - elasticloadbalancing:DeleteLoadBalancer
          - elasticloadbalancing:ModifyTargetGroup
          - elasticloadbalancing:ModifyTargetGroupAttributes
          - elasticloadbalancing:DeleteTargetGroup
          Resource: "*"
          Condition:
            'Null':
              aws:ResourceTag/elbv2.k8s.aws/cluster: 'false'
        - Effect: Allow
          Action:
          - elasticloadbalancing:AddTags
          Resource:
          - arn:aws:elasticloadbalancing:*:*:targetgroup/*/*
          - arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*
          - arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*
          Condition:
            StringEquals:
              elasticloadbalancing:CreateAction:
              - CreateTargetGroup
              - CreateLoadBalancer
            'Null':
              aws:RequestTag/elbv2.k8s.aws/cluster: 'false'
        - Effect: Allow
          Action:
          - elasticloadbalancing:RegisterTargets
          - elasticloadbalancing:DeregisterTargets
          Resource: arn:aws:elasticloadbalancing:*:*:targetgroup/*/*
        - Effect: Allow
          Action:
          - elasticloadbalancing:SetWebAcl
          - elasticloadbalancing:ModifyListener
          - elasticloadbalancing:AddListenerCertificates
          - elasticloadbalancing:RemoveListenerCertificates
          - elasticloadbalancing:ModifyRule
          Resource: "*"

  WorkerAwsCloudProviderPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: WorkerAwsCloudProviderPolicy
      Roles:
        - !Ref WorkerInstanceIAMRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ec2:DescribeInstances
              - ec2:DescribeRegions
              - ecr:GetAuthorizationToken
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:GetRepositoryPolicy
              - ecr:DescribeRepositories
              - ecr:ListImages
              - ecr:BatchGetImage
            Resource: "*"

  ClusterAutoScalingPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ClusterAutoScalingPolicy
      Roles:
        - !Ref ControlPlaneInstanceIAMRole
        - !Ref WorkerInstanceIAMRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribeAutoScalingInstances
              - autoscaling:DescribeLaunchConfigurations
              - autoscaling:DescribeScalingActivities
              - autoscaling:DescribeTags
              - ec2:DescribeInstanceTypes
              - ec2:DescribeLaunchTemplateVersions
            Resource: "*"
          - Effect: Allow
            Action:
              - autoscaling:SetDesiredCapacity
              - autoscaling:TerminateInstanceInAutoScalingGroup
              - ec2:DescribeImages
              - ec2:GetInstanceTypesFromInstanceRequirements
              - eks:DescribeNodegroup
            Resource: "*"

  KubernetesClusterPutSSMParameterStoreAccessPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "ParameterStoreWritePolicy"
      Roles:
        - !Ref ControlPlaneInstanceIAMRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "ssm:PutParameter"
            Resource:
              - Fn::Sub: "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/kubernetes/${K8sClusterName}/*"

  KubernetesClusterKMSKeyEncryptAccessPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "KMSKeyEncryptAccessPolicy"
      Roles:
        - !Ref ControlPlaneInstanceIAMRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "kms:Encrypt"
            Resource:
              - "*"

  KubernetesClusterGetSSMParameterAccessPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "SSMParameterAccessPolicy"
      Roles:
        - !Ref ControlPlaneInstanceIAMRole
        - !Ref WorkerInstanceIAMRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "ssm:GetParameter"
            Resource:
              - Fn::Sub: "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/kubernetes/${K8sClusterName}/*"

  KubernetesClusterGetKMSKeyAccessPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "KMSKeyAccessPolicy"
      Roles:
        - !Ref ControlPlaneInstanceIAMRole
        - !Ref WorkerInstanceIAMRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "kms:DescribeKey"
              - "kms:GetKeyPolicy"
              - "kms:GetKeyRotationStatus"
            Resource:
              - "*"
  
  BastionHostInstanceIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: BastionHostInstanceIAMRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Tags:
        - Key: Name
          Value: BastionHostInstanceIAMRole
  
  BastionHostInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: BastionHostInstanceProfile
      Roles:
        - !Ref BastionHostInstanceIAMRole

  ControlPlaneInstanceIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ControlPlaneInstanceIAMRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Tags:
        - Key: Name
          Value: ControlPlaneInstanceIAMRole
  
  ControlPlaneInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: ControlPlaneInstanceProfile
      Roles:
        - !Ref ControlPlaneInstanceIAMRole

  WorkerInstanceIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: WorkerInstanceIAMRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Tags:
        - Key: Name
          Value: WorkerInstanceIAMRole
  
  WorkerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: WorkerInstanceProfile
      Roles:
        - !Ref WorkerInstanceIAMRole

Outputs:
  BastionHostInstanceProfileArn:
    Description: ARN of the BastionHostInstanceProfile
    Value: !GetAtt BastionHostInstanceProfile.Arn

  ControlPlaneInstanceProfileArn:
    Description: ARN of the ControlPlaneInstanceProfile
    Value: !GetAtt ControlPlaneInstanceProfile.Arn

  WorkerInstanceProfileArn:
    Description: ARN of the WorkerInstanceProfile
    Value: !GetAtt WorkerInstanceProfile.Arn
